@model TMP.Models.CustomerInfoModel
@using CONT = TMP.Infrastructure.Web.StatusManager.OtherDetail.Constant;
@{
    ViewBag.Title = "Company More Info";
    Layout = "~/Views/MasterPage/_defaultLayout.cshtml";
}
@{
    List<SelectListItem> listItems1 = new List<SelectListItem>();
    listItems1.Add(new SelectListItem
    {
        Text = "Funded",
        Value = "Funded"
    });
    listItems1.Add(new SelectListItem
    {
        Text = "Unfunded",
        Value = "Unfunded"
    });
}
<div class="col-md-12 padoff div-border-multitab">
    @if (Model.CustomerID > 0)
    {
        @Html.Action("_CustomerMenuPartialPage", "MasterPage", new { CustomerID = Model.CustomerID, _tab = 2 })
    }
    @using (Html.BeginForm("CompanyMoreInfo", "CustomerReg", FormMethod.Post, new { enctype = "multipart/form-data", @class = "col-md-12 padoff CommonValidations", id = "UMForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="col-md-12 createusertitle">COMPANY INFORMATION</div>
        <div class="col-md-12" style="height:15px;"></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        if (Model.CustomerTypeID == CONT.SupplierCustomerTypeID)
        {
            <div class="form-group">
                <label class="col-md-2" for="textinput">Select Buyers &nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.DropDownList("CustomerObligors_List", null, new { @class = "form-control validate[required]", @multiple = "multiple", @id = "CustomerObligors_List" })
                </div>

            </div>
        }
        <div class="form-group">
            <label class="col-md-2" for="textinput">Type of Company&nbsp;<span style="color:red;width:50px;">*</span></label>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.CompanyTypeID, new SelectList(ViewBag.DDLCompanyTypeID, "CompanyTypeID", "CompanyTypeName", Model.CompanyTypeID), "--Select--", new { @class = "form-control validate[required]" })
            </div>
            <div class="col-md-1"></div>

            <label class="col-md-2" for="textinput">Trade License Number&nbsp;<span style="color:red;width:50px;">*</span></label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.TradeLicNo, new { @class = "form-control  validate[required] disbl-cntrl-cls", maxlength = "50", autocomplete = "off" })
            </div>
            <div class="col-md-1"></div>
        </div>

        //Other Type of Company
        <div class="form-group" style="display:none;" id="DV_OtherCompanyType">
            <label class="col-md-2" for="textinput">Other Type of Company&nbsp;<span style="color:red;width:50px;">*</span></label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.OtherCompanyType, new { @class = "form-control validate[required] disbl-cntrl-cls", maxlength = "50", autocomplete = "off" })
            </div>
            <div class="col-md-1"></div>
            <div class="col-md-6"></div>
        </div>

        <div class="col-md-12" style="height:10px;"></div>
        <div class="form-group">
            <label class="col-md-2" for="textinput">Place of Incorporation&nbsp;<span style="color:red;width:50px;">*</span></label>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.IncCountryID, new SelectList(ViewBag.DDLCountryID, "CountryID", "CountryName", Model.IncCountryID), "--Select--", new { @class = "form-control validate[required] disbl-cntrl-cls" })
            </div>
            <div class="col-md-1"></div>

            <label class="col-md-2" for="textinput">Date of Incorporation&nbsp;<span style="color:red;width:50px;">*</span></label>
            <div class="col-md-3">
                @if (Model.IncDate != Convert.ToDateTime("01-01-1900") && Model.IncDate != Convert.ToDateTime("01-01-0001"))
                {
                    <input id="IncDate" name="IncDate" type="text" placeholder="" class="form-control formattedCalenderinc validate[required] disbl-cntrl-cls" autocomplete="off" value="@Convert.ToDateTime(Model.IncDate).ToString("dd-MMM-yyyy")">
                }
                else
                {
                    <input id="IncDate" name="IncDate" type="text" placeholder="" class="form-control formattedCalenderinc validate[required] disbl-cntrl-cls" autocomplete="off">
                }
            </div>

            <div class="col-md-1"></div>

        </div>
        <div class="col-md-12" style="height:10px;"></div>
        <div class="form-group">
            <label class="col-md-2" for="textinput">License Expiry Date&nbsp;<span style="color:red;width:50px;">*</span></label>
            <div class="col-md-3">
                @if (Model.LicExpDate != Convert.ToDateTime("01-01-1900") && Model.LicExpDate != Convert.ToDateTime("01-01-0001"))
                {
                    if (DateTime.Now.AddDays(CONT.DateExpireDay) > Convert.ToDateTime(Model.LicExpDate))
                    {
                        <input id="LicExpDate" name="LicExpDate" type="text" placeholder="" class="form-control formattedCalender validate[required] disbl-cntrl-cls DateExpire" autocomplete="off" value="@Convert.ToDateTime(Model.LicExpDate).ToString("dd-MMM-yyyy")">
                    }
                    else
                    {
                        <input id="LicExpDate" name="LicExpDate" type="text" placeholder="" class="form-control formattedCalender validate[required] disbl-cntrl-cls" autocomplete="off" value="@Convert.ToDateTime(Model.LicExpDate).ToString("dd-MMM-yyyy")">
                    }
                }
                else
                {
                    <input id="LicExpDate" name="LicExpDate" type="text" placeholder="" class="form-control formattedCalender validate[required] disbl-cntrl-cls" autocomplete="off">
                }
            </div>
            <div class="col-md-1"></div>

            <label class="col-md-2" for="textinput" style="padding-right: 0px;">Trade Lic. Issuing Authority &nbsp;<span style="color:red;width:50px;">*</span></label>
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.IssuingAuth, new { @class = "form-control  validate[required] disbl-cntrl-cls", maxlength = "50", autocomplete = "off" })
            </div>
            <div class="col-md-1"></div>

        </div>

        if (Model.CustomerTypeID != CONT.FunderCustomerTypeID)
        {
            <div class="col-md-12" style="height:10px;"></div>
            <div class="form-group" style="padding-bottom:4%;">
                <label class="col-md-2" for="textinput">Brief About Business&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.AbtBusiness, new { @class = "form-control  validate[required] disbl-cntrl-cls", maxlength = "2000", autocomplete = "off", @style = "height: 45px;" })
                </div>
                <div class="col-md-1"></div>

            </div>
            <div class="col-md-12" style="height:10px;"></div>
            <div class="form-group" style="padding-bottom:4%;">
                <label class="col-md-2" for="textinput">Business Activity&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.BusActivity, new { @class = "form-control  validate[required] disbl-cntrl-cls", maxlength = "2000", autocomplete = "off", @style = "height: 45px;" })
                </div>
                <div class="col-md-1"></div>

            </div>
            <div class="col-md-12" style="height:10px;"></div>
            <div class="form-group">
                <label class="col-md-2" for="textinput">Currency&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.CurrencyID, new SelectList(ViewBag.DDLCurrencyID, "CurrencyID", "CurrencyCode", Model.CurrencyID), "--Select--", new { @class = "form-control validate[required] disbl-cntrl-cls" })

                </div>
                <div class="col-md-1"></div>

                <label class="col-md-2" for="textinput">Annual Turnover&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.AnnTurnOver, new { @class = "form-control num validate[required] disbl-cntrl-cls", maxlength = "50", autocomplete = "off" })
                </div>
                <div class="col-md-1"></div>

            </div>
            <div class="col-md-12" style="height:10px;"></div>
            <div class="form-group">
                <label class="col-md-2" for="textinput">Projected Sales Volume&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.SaleVolume, new { @class = "form-control num validate[required] disbl-cntrl-cls", maxlength = "50", autocomplete = "off" })
                </div>
                <div class="col-md-1"></div>

                <label class="col-md-2" for="textinput">Net Profit&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.NetProfit, new { @class = "form-control num validate[required] disbl-cntrl-cls", maxlength = "50", autocomplete = "off" })
                </div>
                <div class="col-md-1"></div>

            </div>
            <div class="col-md-12" style="height:10px;"></div>
            <div class="form-group">
                <label class="col-md-2" for="textinput">Sales Payable Terms&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.SaleInvTerms, new SelectList(ViewBag.DDLSalesInvoiceTerms, "value", "text", Model.SaleInvTerms), "--Select--", new { @class = "form-control validate[required] disbl-cntrl-cls" })
                </div>
                <div class="col-md-1"></div>
                <label class="col-md-2" for="textinput">Number of Employees&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.EmpCount, new { @class = "form-control num validate[required] disbl-cntrl-cls", maxlength = "50", autocomplete = "off" })
                </div>
                <div class="col-md-1"></div>
            </div>


            //Other SaleInvTerms
            <div class="form-group" style="display:none;" id="DV_OtherSaleInvTerms">
                <label class="col-md-2" for="textinput">Other Payable  Terms&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.OtherSaleInvTerms, new { @class = "form-control validate[required] disbl-cntrl-cls", maxlength = "50", autocomplete = "off" })
                </div>
                <div class="col-md-1"></div>
                <div class="col-md-6"></div>
            </div>

            <div class="col-md-12" style="height:10px;"></div>
        }

            <div class="container padoff">
                <div>
                    <div class="col-md-4">
                        <label class="col-md-6" for="textinput">Is the company part of a group?&nbsp;<span style="color:red;width:50px;"></span></label>
                        @if (Model.IsCompGrpPart)
                        {
                            <div class="col-md-6" style="padding-top:10px;">
                                <input type="checkbox" id="cb1" name="cb1" value="cb1" class="chb  disbl-cntrl-cls" checked="checked" /> Yes
                                <input type="checkbox" id="cb2" name="cb2" class="chb  disbl-cntrl-cls" /> No
                            </div>
                        }
                        else
                        {
                            <div class="col-md-6" style="padding-top:10px;">
                                <input type="checkbox" id="cb1" name="cb1" value="cb1" class="chb  disbl-cntrl-cls" /> Yes
                                <input type="checkbox" id="cb2" name="cb2" value="cb2" class="chb  disbl-cntrl-cls" checked="checked" /> No
                            </div>
                        }

                    </div>
                    <div class="col-md-4">
                        <label class="col-md-4" for="textinput">Name of the group&nbsp;<span style="color:red;width:50px;"></span></label>
                        <div class="col-md-8 group">
                            @Html.TextBoxFor(model => model.GroupName, new { @class = "form-control validate[required]", maxlength = "50", autocomplete = "off" })
                        </div>

                    </div>
                    <div class="col-md-4">
                        <label class="col-md-4" for="textinput">Group website&nbsp;<span style="color:red;width:50px;"></span></label>
                        <div class="col-md-8 group">
                            @Html.TextBoxFor(model => model.GroupWebsite, new { @class = "form-control validate[required,custom[url]]", maxlength = "50", autocomplete = "off" })
                        </div>

                    </div>
                </div>
            </div>

            <div class="container padoff">
                <div>
                    <div class="col-md-4">
                        <label class="col-md-6" for="textinput">Is the company supervised by a financial services regulator?&nbsp;<span style="color:red;width:50px;"></span></label>
                        @if (Model.IsCompFinServ)
                        {
                            <div class="col-md-6" style="padding-top:10px;">
                                <input type="checkbox" id="cb5" name="cb5" value="cb5" class="chb disbl-cntrl-cls" checked="checked" /> Yes
                                <input type="checkbox" id="cb6" name="cb6" class="chb disbl-cntrl-cls" /> No
                            </div>
                        }
                        else
                        {
                            <div class="col-md-6" style="padding-top:10px;">
                                <input type="checkbox" id="cb5" name="cb5" value="cb5" class="chb disbl-cntrl-cls" /> Yes
                                <input type="checkbox" id="cb6" name="cb6" class="chb disbl-cntrl-cls" checked="checked" /> No
                            </div>
                        }
                    </div>
                    <div class="col-md-6">
                        <label class="col-md-4" for="textinput">Regulator Name&nbsp;<span style="color:red;width:50px;"></span></label>
                        <div class="col-md-8 financial">
                            @Html.TextBoxFor(model => model.RegulatorName, new { @class = "form-control validate[required]", maxlength = "50", autocomplete = "off" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="container padoff">
                <div>
                    <div class="col-md-4">
                        <label class="col-md-6" for="textinput">Is the company publicly listed?&nbsp;<span style="color:red;width:50px;"></span></label>
                        @if (Model.IsCompPubList)
                        {
                            <div class="col-md-6" style="padding-top:10px;">
                                <input type="checkbox" id="cb3" name="cb3" value="cb3" class="chb" checked="checked" /> Yes
                                <input type="checkbox" id="cb4" name="cb4" class="chb disbl-cntrl-cls" /> No
                            </div>

                        }
                        else
                        {
                            <div class="col-md-6" style="padding-top:10px;">
                                <input type="checkbox" id="cb3" name="cb3" value="cb3" class="chb" /> Yes
                                <input type="checkbox" id="cb4" name="cb4" class="chb disbl-cntrl-cls" checked="checked" /> No
                            </div>
                        }

                    </div>
                    <div class="col-md-4">
                        <label class="col-md-4" for="textinput">Exchange Name&nbsp;<span style="color:red;width:50px;"></span></label>
                        <div class="col-md-8 publicly">
                            @Html.TextBoxFor(model => model.ExchangeName, new { @class = "form-control validate[required] disbl-cntrl-cls", maxlength = "50", autocomplete = "off" })
                        </div>

                    </div>
                    <div class="col-md-4">
                        <label class="col-md-4" for="textinput">Ticker Code&nbsp;<span style="color:red;width:50px;"></span></label>
                        <div class="col-md-8 publicly">
                            @Html.TextBoxFor(model => model.TickerCode, new { @class = "form-control validate[required] disbl-cntrl-cls", maxlength = "50", autocomplete = "off" })
                        </div>

                    </div>
                </div>
            </div>

        <div class="col-md-12" style="height:10px;"></div>
        <div class="container padoff">
            @*<div class="col-md-12">
                <p class="col-md-10 padoff name-msg" style="margin:0;">**As part of the due diligence and on-boarding process, we need to review the documents indicated below. Please upload the required documents in PDF format for our review and analysis.</p>
            </div>*@
            <div>
                <div class="col-md-3">
                    @if (Model.UpdTradeLic != null)
                    {
                    <label class="f-btn f-btn-default f-btn-file">
                        Upload Trade License<input type="file" name="UpdTradeLic" id="UpdTradeLic" class="file disbl-cntrl-cls" />
                    </label>
                    <br />
                    <label class="l-filename" id="UpdTradeLic_span"></label>
                        if (Model.UpdTradeLic != "")
                        {
                    @Html.HiddenFor(x => x.UpdTradeLic)
                    <br />
                    <span class="p-view">
                        @*<a href='~/Files/Upload/@Model.UpdTradeLic' target="_blank">View</a>*@
                        <a href="javascript:void(0);" class="UpdTradeLicPopUp" data-id="@Model.UpdTradeLic">View</a>
                    </span>
                        }
                    }
                    else
                    {
                    <label class="f-btn f-btn-default f-btn-file">
                        Upload Trade License<input type="file" name="UpdTradeLic" id="UpdTradeLic" class="file validate[required]  disbl-cntrl-cls" />
                    </label>
                    <br />
                    <label class="l-filename" id="UpdTradeLic_span"></label>
                    }

                </div>
                <div class="col-md-3">

                    @if (Model.UpdAuditFin != null)
                    {
                        <label class="f-btn f-btn-default f-btn-file">
                            Upload Audited Financials<input type="file" name="UpdAuditFin" id="UpdAuditFin" class="file disbl-cntrl-cls" />
                        </label>
                        <br />
                        <label class="l-filename" id="UpdAuditFin_span"></label>
                        if (Model.UpdAuditFin != "")
                        {
                    @Html.HiddenFor(x => x.UpdAuditFin)
                    <br />
                    <span class="p-view">
                        @*<a href='~/Files/Upload/@Model.UpdAuditFin' target="_blank">View</a>*@
                        <a href="javascript:void(0);" class="UpdAuditFinPopUp" data-id="@Model.UpdAuditFin">View</a>
                    </span>
                        }
                    }
                    else
                    {
                        if (Model.CustomerTypeID != CONT.FunderCustomerTypeID)
                        {
                            <label class="f-btn f-btn-default f-btn-file">
                                Upload Audited Financials<input type="file" name="UpdAuditFin" id="UpdAuditFin" class="file validate[required] disbl-cntrl-cls" />
                            </label>
                           

                        }
                        else
                        {
                            <label class="f-btn f-btn-default f-btn-file">
                                Upload Audited Financials<input type="file" name="UpdAuditFin" id="UpdAuditFin" class="file disbl-cntrl-cls" />
                            </label>
                           

                        }
                        <br />
                        <label class="l-filename" id="UpdAuditFin_span"></label>
                    }
                </div>
                <div class="col-md-3">

                    @if (Model.CustomerTypeID != CONT.FunderCustomerTypeID)
                    {
                        if (Model.UpdBusProfile != null)
                        {
                            <label class="f-btn f-btn-default f-btn-file">
                                Upload Business Profile<input type="file" name="UpdBusProfile" id="UpdBusProfile" class="file disbl-cntrl-cls" />
                            </label>
                            <br />
                            <label class="l-filename" id="UpdBusProfile_span"></label>
                            if (Model.UpdBusProfile != "")
                            {
                    @Html.HiddenFor(x => x.UpdBusProfile)
                    <br />
                    <span class="p-view">
                        @*<a href='~/Files/Upload/@Model.UpdBusProfile' target="_blank">View</a>*@
                        <a href="javascript:void(0);" class="UpdBusProfilePopUp" data-id="@Model.UpdBusProfile">View</a>
                    </span>
                            }
                        }
                        else
                        {

                            <label class="f-btn f-btn-default f-btn-file">
                                Upload Business Profile<input type="file" name="UpdBusProfile" id="UpdBusProfile" class="file disbl-cntrl-cls" />
                            </label>
                            <br />
                            <label class="l-filename" id="UpdBusProfile_span"></label>
                        }
                    }
                </div>
                <div class="col-md-3">
                    @if (Model.CustomerTypeID != CONT.FunderCustomerTypeID)
                    {
                        if (Model.UpdInHouseFin != null)
                        {
                            <label class="f-btn f-btn-default f-btn-file">
                                Upload Latest In-house Financials <input type="file" name="UpdInHouseFin" id="UpdInHouseFin" class="file disbl-cntrl-cls" />
                            </label>
                            <br />
                            <label class="l-filename" id="UpdInHouseFin_span"></label>
                            if (Model.UpdInHouseFin != "")
                            {
                    @Html.HiddenFor(x => x.UpdInHouseFin)
                    <br />
                    <span class="p-view">
                        @*<a href='~/Files/Upload/@Model.UpdInHouseFin' target="_blank">View</a>*@
                        <a href="javascript:void(0);" class="UpdInHouseFinPopUp" data-id="@Model.UpdInHouseFin">View</a>
                    </span>
                            }
                        }
                        else
                        {

                            <label class="f-btn f-btn-default f-btn-file">
                                Upload Latest In-house Financials<input type="file" name="UpdInHouseFin" id="UpdInHouseFin" class="file validate[required] disbl-cntrl-cls" />
                            </label>
                            <br />
                            <label class="l-filename" id="UpdInHouseFin_span"></label>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-md-12" style="text-align:right">
            @Html.HiddenFor(x => x.CustomerID)
            @Html.HiddenFor(x => x.CustomerInfoID)
            @Html.HiddenFor(x => x.Status)
            @Html.HiddenFor(x => x.ObligorIDs)
            @if ((Model.CustomerTypeID == CONT.BuyerCustomerTypeID) || (Model.CustomerTypeID == CONT.BothObligorAndBuyerTypeID) || (Model.CustomerTypeID == CONT.ObligorCustomerTypeID))
            {
                <button id="Save" name="Save" value="Save" type="submit" class="btn CommonAttachValidation btn-tgs">Save</button>
            }
            else
            {
                <button id="NextSave" name="NextSave" value="NextSave" class="btn btn-tgs CommonAttachValidation">&nbsp;Save & Procced</button>
            }
        </div>
    }
    @if ((Model.CustomerTypeID == CONT.BuyerCustomerTypeID) ||
                                                (Model.CustomerTypeID == CONT.BothObligorAndBuyerTypeID)
                                                || (Model.CustomerTypeID == CONT.ObligorCustomerTypeID))
    {
        using (Html.BeginForm("CompanyMoreInfo", "CustomerReg", FormMethod.Post, new { enctype = "multipart/form-data", @class = "col-md-12 padoff CommonValidations" }))
        {
            if (Model.CustomerInfoID > 0)
            {
                <div class="col-md-12" style="height:15px;"></div>
                <div class="col-md-12 createusertitle">CREDIT LINE FACILITIES PER BANK</div>
                <div class="col-md-12" style="height:15px;"></div>
                <div class="form-group">
                    <label class="col-md-2" for="textinput">Bank Name&nbsp;<span style="color:red;width:50px;">*</span></label>
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.CreditBankID, new SelectList(ViewBag.DDLBankID, "BankID", "BankName", Model.CreditBankID), "--Select--", new { @class = "form-control  validate[required]" })
                    </div>
                    <div class="col-md-1"></div>

                    <label class="col-md-2" for="textinput">Facility Type&nbsp;<span style="color:red;width:50px;">*</span></label>
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.FacType, listItems1, "--Select--", new { @class = "form-control  validate[required]" })
                    </div>
                    <div class="col-md-1"></div>

                </div>
                <div class="col-md-12" style="height:10px;"></div>
                <div class="form-group">
                    <label class="col-md-2" for="textinput">Facility Limit&nbsp;<span style="color:red;width:50px;">*</span></label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.FacLimit, new { @class = "form-control num1 validate[required]", maxlength = "50", autocomplete = "off" })

                    </div>
                    <div class="col-md-1"></div>
                    <label class="col-md-2" for="textinput">Currency&nbsp;<span style="color:red;width:50px;"></span></label>
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.CreditCurrencyID, new SelectList(ViewBag.DDLCurrencyID, "CurrencyID", "CurrencyCode", Model.CreditCurrencyID), "--Select--", new { @class = "form-control validate[required]" })
                    </div>
                    <div class="col-md-1"></div>
                </div>
                <div class="col-md-12" style="height:10px;"></div>
                <div class="form-group">
                    <label class="col-md-2" for="textinput">Utilization&nbsp;<span style="color:red;width:50px;">*</span></label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(model => model.FacUtilize, new { @class = "form-control num1 validate[required]", maxlength = "50", autocomplete = "off" })
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2"></div>
                    <div class="col-md-4" style="text-align:right;">
                        @Html.HiddenFor(x => x.Status)
                        @Html.HiddenFor(x => x.CustomerID)
                        @Html.HiddenFor(x => x.CustomerCreditID)
                        <button id="CreditSave" name="CreditSave" value="CreditSave" class="CommonAttachValidation btn btn-tgs">&nbsp;Save & Add New</button>&nbsp;&nbsp;
                        <button id="CreditNextSave" name="CreditNextSave" value="CreditNextSave" class="btn btn-tgs CommonAttachValidation">&nbsp;Save & Next</button>
                    </div>
                </div>
                @Html.Action("GridCreditBankDetail", "CustomerReg", new { CustomerID = Model.CustomerID })
               
            }
        }
    }
</div>

<script>
    CompanyMoreInfo();

    if ('@Model.IsCompPubList' == 'True') {
        $(".publicly").css("display", "block");
    }
    else {
        $(".publicly").css("display", "none");
    }

    if ('@Model.IsCompGrpPart' == 'True') {
        $(".group").css("display", "block");
    }
    else {
        $(".group").css("display", "none");
    }

    if ('@Model.IsCompFinServ' == 'True') {
        $(".financial").css("display", "block");
    }
    else {
        $(".financial").css("display", "none");
    }

    function countWords() {
        s = document.getElementById("AbtBusiness").value;
        s = s.replace(/(^\s*)|(\s*$)/gi, "");
        s = s.replace(/[ ]{2,}/gi, " ");
        s = s.replace(/\n /, "\n");
        var Result = s.split(' ').length;
        return Result;
    }


    var selected_tags_arr = new Array();
    var selected_tags = $('#ObligorIDs').val();
    selected_tags_arr = selected_tags.split(",");
    $('#CustomerObligors_List option').each(function () {
        var option_val = this.value;
        for (var i in selected_tags_arr) {
            if (selected_tags_arr[i] == option_val) {
                $("#CustomerObligors_List option[value='" + this.value + "']").attr("selected", 1);
            }
        }
    });

    $('#CustomerObligors_List').multiselect({
        includeSelectAllOption: true,
        maxHeight: '300',
        buttonWidth: '254.5',

    });


    var CompanyTypeID = $("#CompanyTypeID").val();
    if (CompanyTypeID != "") {
        AddOtherCompanyType();
    }

    function AddOtherCompanyType() {
        var IndustryID = $("#CompanyTypeID").val();
        if (IndustryID != "") {
            $('.disbl-cntrl-cls').attr('disabled', false);
            var skillsSelect = document.getElementById("CompanyTypeID");
            var selectedText = skillsSelect.options[skillsSelect.selectedIndex].text;
            if (selectedText == '@ViewBag.Global_CompanyTypeName') {
                $('.disbl-cntrl-cls').attr('disabled', true);
                document.getElementById("cb3").checked = true;
                document.getElementById("cb4").checked = false;
            }
            else if (selectedText == "Other") {
                $('#DV_OtherCompanyType').show();
                $("#OtherCompanyType").focus();
            }
            else {
                $('#DV_OtherCompanyType').hide();
                $("#OtherCompanyType").val("");

            }
        }
    }

    $("#CompanyTypeID").on("change", function () {
        AddOtherCompanyType();
    });





    var SaleInvTerms = $("#SaleInvTerms").val();
    if (SaleInvTerms != "") {
        AddOtherSaleInvTerms();
    }

    function AddOtherSaleInvTerms() {
        var SaleInvTerms = $("#SaleInvTerms").val();
        if (SaleInvTerms != "" && typeof (SaleInvTerms) != 'undefined') {

            var skillsSelect = document.getElementById("SaleInvTerms");
            var selectedText = skillsSelect.options[skillsSelect.selectedIndex].text;
            if (selectedText == "Other") {
                $('#DV_OtherSaleInvTerms').show();
                $("#OtherSaleInvTerms").focus();
            }
            else {
                $('#DV_OtherSaleInvTerms').hide();
                $("#OtherSaleInvTerms").val("");
            }
        }
    }

    $("#SaleInvTerms").on("change", function () {
        AddOtherSaleInvTerms();
    });

    $("#CreditNextSave").on("click", function () {
        $('.ValRemo2').removeClass(" input-validation-error");
        $('.ValRemo2').rules('remove');
        $('.ValRemo1').removeClass(" input-validation-error");
        $('.ValRemo1').rules('remove');
    });
    $("#FacLimit").val(parseFloat($("#FacLimit").val(), 10).toFixed(2));
    $("#FacUtilize").val(parseFloat($("#FacUtilize").val(), 10).toFixed(2));

    $(".UpdTradeLicPopUp").on("click", function () {
        var url = '/Files/Upload/' + '@Model.UpdTradeLic' + '#toolbar=0';
        $('#dociframe').attr('src', url)
        $('#DocPopup').modal({ show: true });
    });

    $(".UpdAuditFinPopUp").on("click", function () {
        var url = '/Files/Upload/' + '@Model.UpdAuditFin' + '#toolbar=0';
        $('#dociframe').attr('src', url)
        $('#DocPopup').modal({ show: true });
    });

    $(".UpdBusProfilePopUp").on("click", function () {
        var url = '/Files/Upload/' + '@Model.UpdBusProfile' + '#toolbar=0';
        $('#dociframe').attr('src', url)
        $('#DocPopup').modal({ show: true });
    });

    $(".UpdInHouseFinPopUp").on("click", function () {
        var url = '/Files/Upload/' + '@Model.UpdInHouseFin' + '#toolbar=0';
        $('#dociframe').attr('src', url)
        $('#DocPopup').modal({ show: true });
    });
</script>

<style>
    .box-form {
        padding-bottom: 10%;
    }

    .box-boder-form {
        padding-bottom: 0px;
        border: 1px dotted #336699;
        height: 165px;
    }

    .btn-group > .btn:first-child {
        margin-left: 0;
        text-align: left;
    }

    .dropdown-menu {
        border-radius: 0px;
        margin: 0px;
    }

        .dropdown-menu > li > a:hover {
            background-color: #428bca;
            color: #000000;
        }

    .multiselect-container > li > a.multiselect-all label {
        font-weight: 400;
        padding: 0px 0px 0px 35px;
    }

    .dropdown-menu > li > a {
        background-color: transparent;
        padding-left: 0px;
        padding-top: 5px;
        padding-bottom: 5px;
    }
</style>