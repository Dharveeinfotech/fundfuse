@model TMP.Models.InvoiceTransactionModel
@using CONT = TMP.Infrastructure.Web.StatusManager.OtherDetail.Constant;
@{
    ViewBag.Title = "Profit And Processing Fees";
    Layout = "~/Views/MasterPage/_defaultLayout.cshtml";
}

<div class="col-md-12 div-border padoff">
    @using (Html.BeginForm("ProfitAndFees", "ReverseFactoring", FormMethod.Post, new { @class = "col-md-12 padoff CommonValidations" }))
    {
        @Html.HiddenFor(model => model.IndexStatus)
        @Html.HiddenFor(model => model.InvoiceID)

        <div class="col-md-12  dashboard-title">PAYMENT DETAILS</div>
        <div class="col-md-12" style="height:10px;"></div>

        <div class="container padoff">
            <div class="col-md-1"></div>
            <table class="col-md-5">
                <tbody>
                    <tr>
                        <td class="td-bg">Transaction Number</td>
                        <td>
                            @Model.TranRefNo
                        </td>
                    </tr>
                    <tr>
                        <td class="td-bg">Bank Name</td>
                        <td>
                            @Html.DropDownListFor(model => model.PayBankID, new SelectList(ViewBag.DDLBankID, "BankID", "BankName", Model.PayBankID), "--Select--", new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="td-bg">Account Number</td>
                        <td>
                            @Html.TextBoxFor(model => model.PayAccountNo, new { @class = "form-control validate[required]", maxlength = "50", autocomplete = "off" })
                        </td>
                    </tr>
                </tbody>
            </table>

            <table class="col-md-5">
                <tbody>
                    <tr>
                        <td class="td-bg">Currency</td>
                        <td>
                            @Model.CurrencyCode
                        </td>
                    </tr>
                    <tr>
                        <td class="td-bg">Conversion Currency</td>
                        <td>
                            @Html.DropDownListFor(model => model.PayCurrencyID, new SelectList(ViewBag.DDLCurrencyID, "CurrencyID", "CurrencyCode", Model.PayCurrencyID), "--Select--", new { @class = "form-control" })
                        </td>
                    </tr>
                    <tr>
                        <td class="td-bg">Conversion Currency Rate</td>
                        <td>
                            @Html.TextBoxFor(model => model.PayCurrencyRate, new { @class = "form-control num validate[required]", maxlength = "50", autocomplete = "off" })
                        </td>
                    </tr>
                </tbody>
            </table>
            <div class="col-md-1"></div>
        </div>
        <div class="col-md-12" style="height:35px;"></div>

        <div class="container padoff">
            <div class="col-md-1"></div>
            <table class="col-md-5">
                <tbody>
                    <tr>
                        <td class="td-bg" colspan="2" style="text-align:center;">Profit Amount</td>
                    </tr>
                    <tr>
                        <td class="td-bg">Profit Amount</td>
                        <td>
                            @Html.TextBoxFor(model => model.ProfitAmt, new { @class = "form-control validate[required]", maxlength = "50", autocomplete = "off", @readonly = "readonly" })
                        </td>
                    </tr>
                    <tr>
                        <td class="td-bg">Conversion Amount</td>
                        <td>
                            @Html.TextBoxFor(model => model.PayProfitAmt, new { @class = "form-control validate[required]", maxlength = "50", autocomplete = "off", @readonly = "readonly" })
                        </td>
                    </tr>
                    <tr>
                        <td class="td-bg">Payment Reference Number</td>
                        <td>
                            @Html.TextBoxFor(model => model.PayProfitRefNo, new { @class = "form-control validate[required]", maxlength = "50", autocomplete = "off" })
                        </td>
                    </tr>
                    <tr>
                        <td class="td-bg">Payment Date</td>
                        <td>
                            @Html.EditorFor(model => model.PayProfitDate, new { htmlAttributes = new { @class = "form-control formattedCalender validate[required]", maxlength = "50", autocomplete = "off" } })
                        </td>
                    </tr>
                </tbody>
            </table>

            <table class="col-md-5">
                <tbody>
                    <tr>
                        <td class="td-bg" colspan="2" style="text-align:center;">Processing Fees</td>
                    </tr>
                    <tr>
                        <td class="td-bg">Fees Amount</td>
                        <td>
                            @Html.TextBoxFor(model => model.ProcessFeeAmt, new { @class = "form-control validate[required]", maxlength = "50", autocomplete = "off", @readonly = "readonly" })
                        </td>
                    </tr>
                    <tr>
                        <td class="td-bg">Conversion Amount</td>
                        <td>
                            @Html.TextBoxFor(model => model.PayProcessFeeAmt, new { @class = "form-control validate[required]", maxlength = "50", autocomplete = "off", @readonly = "readonly" })
                        </td>
                    </tr>
                    <tr>
                        <td class="td-bg">Payment Reference Number</td>
                        <td>
                            @Html.TextBoxFor(model => model.PayProcessRefNo, new { @class = "form-control validate[required]", maxlength = "50", autocomplete = "off" })
                        </td>
                    </tr>
                    <tr>
                        <td class="td-bg">Payment Date</td>
                        <td>
                            @Html.EditorFor(model => model.PayProcessDate, new { htmlAttributes = new { @class = "form-control formattedCalender validate[required]", maxlength = "50", autocomplete = "off" } })
                        </td>
                    </tr>
                </tbody>
            </table>
            <div class="col-md-1"></div>
        </div>
        <div class="col-md-12" style="height:10px;"></div>

        <div class="form-group">
            <div class="col-md-9"></div>
            <div class="col-md-2" style="text-align:right;">
                <button id="btnSubmit" name="btnSubmit" value="submit" type="submit" class="btn CommonAttachValidation btn-tgs">Submit</button>
            </div>
            <div class="col-md-1"></div>
        </div>
    }
</div>
<style>
    .error { border-color: #a94442 !important; }
    .error:focus { box-shadow: 0 0 2px #a94442 !important; }
</style>
<script>
    $('#PayProfitDate').val(); $('#PayProcessDate').val();
    $('#PayCurrencyRate').change(function () {
        var PayCurrencyID = $("#PayCurrencyID").val();
        if (PayCurrencyID != "") {
            Calc();
        }
        else {
            $("#errorMsg").html("Please select conversion currency.");
            $('#Error').modal('show');
            $('#PayCurrencyRate').val("");
        }
    });

    function Calc() {
        var PayCurrencyRate = document.getElementById("PayCurrencyRate").value;
        var ProfitAmt = document.getElementById("ProfitAmt").value;
        var ProcessFeeAmt = document.getElementById("ProcessFeeAmt").value;

        var PayProfitAmt = ProfitAmt * PayCurrencyRate;
        var PayProcessFeeAmt = ProcessFeeAmt * PayCurrencyRate;

        document.getElementById("PayProfitAmt").value = parseFloat(PayProfitAmt, 10).toFixed(2);
        document.getElementById("PayProcessFeeAmt").value = parseFloat(PayProcessFeeAmt, 10).toFixed(2);        
    }

    $("#PayProfitDate").on("change", function () {
        {
            document.getElementById("PayProfitDate").className = document.getElementById("PayProfitDate").className.replace("error ", "");
            document.getElementById("PayProfitDate").className = document.getElementById("PayProfitDate").className.replace(" input-validation-error", "");
        }
    });
    $("#PayProcessDate").on("change", function () {
        {
            document.getElementById("PayProcessDate").className = document.getElementById("PayProcessDate").className.replace("error ", "");
            document.getElementById("PayProcessDate").className = document.getElementById("PayProcessDate").className.replace(" input-validation-error", "");
        }
    });

    $("#btnSubmit").on("click", function () {
        var PayProfitDate = $("#PayProfitDate").val();
        if (PayProfitDate == "") {
            document.getElementById("PayProfitDate").className = document.getElementById("PayProfitDate").className.replace("error ", "");
            document.getElementById("PayProfitDate").className = "error " + document.getElementById("PayProfitDate").className;
        } else {
            document.getElementById("PayProfitDate").className = document.getElementById("PayProfitDate").className.replace("error ", "");
            document.getElementById("PayProfitDate").className = document.getElementById("PayProfitDate").className.replace(" input-validation-error", "");
        }

        var PayProcessDate = $("#PayProcessDate").val();
        if (PayProcessDate == "") {
            document.getElementById("PayProcessDate").className = document.getElementById("PayProcessDate").className.replace("error ", "");
            document.getElementById("PayProcessDate").className = "error " + document.getElementById("PayProcessDate").className;
        } else {
            document.getElementById("PayProcessDate").className = document.getElementById("PayProcessDate").className.replace("error ", "");
            document.getElementById("PayProcessDate").className = document.getElementById("PayProcessDate").className.replace(" input-validation-error", "");
        }

        $('#PayProfitDate').rules('remove');
        $('#PayProcessDate').rules('remove');
    });
</script>