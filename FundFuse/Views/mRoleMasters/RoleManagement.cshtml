@model TMP.Models.mRoleMaster
@{
    string _class = "";
}
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/MasterPage/_defaultLayout.cshtml";
}
<div class="col-md-12 div-border padoff">
    <div class="col-md-12  dashboard-title">Create Role</div>
    <div class="col-md-12" style="height:10px;"></div>
    <div class="col-md-12" style="height:10px;"></div>

    @using (Html.BeginForm("RoleManagement", "mRoleMasters", FormMethod.Post, new { @class = "col-md-12 padoff", id = "RMForm" }))
    {
        if (ViewBag.ErrorMsg != null)
        {
            <span class="text-danger"> @ViewBag.ErrorMsg</span>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        }
        <div class="col-md-12" style="height:10px;"></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="col-md-2" for="textinput">Role Name&nbsp;<span style="color:red;width:50px;">*</span></label>
            <div class="col-md-3">
                @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control validate[required]", maxlength = "100", autocomplete = "off" } })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2" for="textinput">Role Description</label>
            <div class="col-md-3">
                @Html.EditorFor(model => model.RoleDesc, new { htmlAttributes = new { @class = "form-control validate[required,custom[onlyAlphaNumericSp]]", maxlength = "200", autocomplete = "off" } })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2" for="textinput">Company Type&nbsp;<span style="color:red;width:50px;">*</span></label>
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.CustomerTypeIDs, new SelectList(ViewBag.DDLCustTypID, "CustomerTypeID", "CustomerTypeName", Model.CustomerTypeIDs), new { @multiple = "multiple", @class = "form-control validate[required]", @id = "CustomerTypeIDs" })
                @Html.HiddenFor(model => model.GetCustomerTypeIDs)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-2">
                @Html.CheckBoxFor(m => m.IsMaker) 
                <span style="margin-left:7px;">Maker</span>                 
            </div>
            <div class="col-md-2">
                @Html.CheckBoxFor(m => m.IsChecker)
                <span style="margin-left:7px;">Checker</span>
            </div>
            <div class="col-md-2">
                @Html.CheckBoxFor(m => m.IsApprover)
                <span style="margin-left:7px;">Approver</span>
            </div>
            <div class="col-md-2">
                @Html.CheckBoxFor(m => m.IsViewer)
                <span style="margin-left:7px;">Viewer</span>
            </div>
            <div class="col-md-2"></div>
        </div>


        <div class="createusertitle col-md-12 ">Please select access rights</div>
        <div class="col-md-12" style="height:10px;"></div>
        <input type='hidden' value="@ViewBag.RoleID" name="hdnRoleID" id="hdnRoleID" />
        <input type="hidden" name="intMenuCount" id="intMenuCount" value="@ViewBag.intMenuCount">
        <input type="hidden" name="Status" id="Status" value="@ViewBag.Status">
        <div class="form-group">
            <div class="col-md-3"><input type="checkbox" id="ckbCheckAll" />&nbsp; Select All</div>
            <div class="col-md-9">
                <input type="checkbox" id="ckbCheckMaker" style="margin-left:20px;" />&nbsp;Select All Maker
                <input type="checkbox" id="ckbCheckChecker" style="margin-left:20px;" />&nbsp;Select All Checker
                <input type="checkbox" id="ckbCheckApprover" style="margin-left:20px;" />&nbsp;Select All Approver
                <input type="checkbox" id="ckbCheckViewer" style="margin-left:20px;" />&nbsp;Select All Viewer
            </div>
        </div>



        foreach (var item in ViewBag.MenuRights)
        {
            <div class="container">
                @if (item.ParentMenuID == -1)
                {

                    <div class="col-md-12" style="height:22px; background-color:#e6e7e8;">
                        <div class="col-md-3">
                            <span style="font-size:larger; color:#58595b; font-weight:bold; text-transform: uppercase;">@item.MenuName</span>
                            &nbsp; &nbsp; &nbsp;
                            @if (item.IsChild == false && item.MenuType == "M")
                            {
                                if (ViewBag.IsUpdate == true && item.IsMaker == true)
                                {

                                    <input type="checkbox" class="CheckMaker" title="Maker - @item.MenuName" name="chk_M_@item.MenuID" id="chk_M_@item.MenuID" checked="checked" />
                                }
                                else
                                {
                                    <input type="checkbox" class="CheckMaker" title="Maker - @item.MenuName" name="chk_M_@item.MenuID" id="chk_M_@item.MenuID" />
                                }
                            }
                        </div>
                    </div>
                    <br />
                    foreach (var itemParent in ViewBag.MenuRights)
                    {
                        if (item.MenuID == itemParent.ParentMenuID)
                        {
                            if (itemParent.MenuName == "Transaction")
                            { _class = "dynmic-higt"; }
                            else { _class = "fx-higt"; }
                            <div class="col-md-2" style="border:solid 1px; margin:15px;">
                                <br />
                                <div class="col-md-12" style="text-align:center;background-color:#e6e7e8; height:22px;">
                                    <span style="font-size:larger; color:#58595b; font-weight: bold;">
                                        @itemParent.MenuName
                                    </span>
                                </div>


                                @foreach (var itemParent2 in ViewBag.MenuRights)
                                {
                                    if (itemParent.MenuID == itemParent2.ParentMenuID)
                                    {
                                        <br /><span>@itemParent2.MenuName</span>

                                        if (itemParent2.MenuType == "M")
                                        {
                                            if (ViewBag.IsUpdate == true && itemParent2.IsMaker == true)
                                            {
                                                <input type="checkbox" class="checkBoxClass CheckMaker" title="Maker - @itemParent.MenuName" name="chk_M_@itemParent2.MenuID" id="chk_M_@itemParent2.MenuID" checked="checked" />
                                            }
                                            else
                                            {
                                                <input type="checkbox" class="checkBoxClass CheckMaker" title="Maker - @itemParent.MenuName" name="chk_M_@itemParent2.MenuID" id="chk_M_@itemParent2.MenuID" />
                                            }
                                        }
                                        else if (itemParent2.MenuType == "C")
                                        {
                                            if (ViewBag.IsUpdate == true && itemParent2.IsChecker == true)
                                            {
                                                <input type="checkbox" class="checkBoxClass CheckChecker" title="Checker - @itemParent.MenuName" name="chk_C_@itemParent2.MenuID" id="chk_C_@itemParent2.MenuID"
                                                       checked="checked" />
                                            }
                                            else
                                            {
                                                <input type="checkbox" class="checkBoxClass CheckChecker" title="Checker - @itemParent.MenuName" name="chk_C_@itemParent2.MenuID" id="chk_C_@itemParent2.MenuID" />
                                            }
                                        }
                                        else if (itemParent2.MenuType == "A")
                                        {
                                            if (ViewBag.IsUpdate == true && itemParent2.IsApprover == true)
                                            {
                                                <input type="checkbox" class="checkBoxClass CheckApprover" title="Approver - @itemParent.MenuName" name="chk_A_@itemParent2.MenuID" id="chk_A_@itemParent2.MenuID"
                                                       checked="checked" />
                                            }
                                            else
                                            {
                                                <input type="checkbox" class="checkBoxClass CheckApprover" title="Approver - @itemParent.MenuName" name="chk_A_@itemParent2.MenuID" id="chk_A_@itemParent2.MenuID" />
                                            }
                                        }
                                        else if (itemParent2.MenuType == "V")
                                        {
                                            if (ViewBag.IsUpdate == true && itemParent2.IsView == true)
                                            {
                                                <input type="checkbox" class="checkBoxClass CheckViewer" title="Viewer - @itemParent.MenuName" name="chk_V_@itemParent2.MenuID" id="chk_V_@itemParent2.MenuID"
                                                       checked="checked" />
                                            }
                                            else
                                            {
                                                <input type="checkbox" class="checkBoxClass CheckViewer" title="Viewer - @itemParent.MenuName" name="chk_V_@itemParent2.MenuID" id="chk_V_@itemParent2.MenuID" />
                                            }
                                        }
                                    }
                                }
                            </div>
                        }
                    }
                }
            </div>
        }
        <br />




        <div class="col-md-12" style="height:10px;"></div>
        <div class="col-md-12 " style="text-align:right;">
            <button id="addnew" name="addnew" class="btn-tgs">Save</button>
        </div>

    }

</div>
<style>
    .checkBoxClass {
        float: right;
    }

    .dynmic-higt {
        height: 355px;
    }

    .fx-higt {
        height: 165px;
    }

    .dropdown-menu {
        border-radius: 0px;
        margin: 0px;
    }

        .dropdown-menu > li > a:hover {
            background-color: #428bca;
            color: #000000;
        }

    .multiselect-container > li > a.multiselect-all label {
        font-weight: 400;
        padding: 0px 0px 0px 35px;
    }

    .dropdown-menu > li > a {
        background-color: transparent;
        padding-left: 0px;
        padding-top: 5px;
        padding-bottom: 5px;
    }
</style>
<script>
    $(document).ready(function () {
        $("#ckbCheckAll").click(function () {
            $(".checkBoxClass").prop('checked', $(this).prop("checked"));
        });
        $("#ckbCheckMaker").click(function () {
            $(".CheckMaker").prop('checked', $(this).prop("checked"));
        });

        $("#ckbCheckChecker").click(function () {
            $(".CheckChecker").prop('checked', $(this).prop("checked"));
        });
        $("#ckbCheckApprover").click(function () {
            $(".CheckApprover").prop('checked', $(this).prop("checked"));
        });
        $("#ckbCheckViewer").click(function () {
            $(".CheckViewer").prop('checked', $(this).prop("checked"));
        });
    });

    var selected_tags_arr = new Array();
    var selected_tags = $('#GetCustomerTypeIDs').val();
    if (selected_tags != "") {
        if (typeof (selected_tags) != 'undefined') {
            selected_tags_arr = selected_tags.split(",");
            $('#CustomerTypeIDs option').each(function () {
                var option_val = this.value;
                for (var i in selected_tags_arr) {
                    if (selected_tags_arr[i] == option_val) {
                        $("#CustomerTypeIDs option[value='" + this.value + "']").attr("selected", 1);
                    }
                }
            });
        }
    }
    $('#CustomerTypeIDs').multiselect({
        includeSelectAllOption: true,
        maxHeight: '300',
        buttonWidth: '254.5',

    });
</script>