@model TMP.Models.UserMaster_ListAll_Result
@{
    ViewBag.Title = "Reset Password";
    Layout = "~/Views/MasterPage/_defaultLayout.cshtml";
}

<div class="col-md-12 div-border padoff">
    <div class="
         
         ">Reset Password</div>
    <div class="col-md-12" style="height:10px;"></div>
    @using (Html.BeginForm("ResetPassword", "mUserMasters", FormMethod.Post, new { @class = "col-md-10", id = "RSPForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div class="col-md-12" style="height:10px;"></div>

        <div class="form-group">
            <label class="col-md-2" for="textinput">Search</label>
            <div class="col-md-4">
                @Html.TextBox("LoginSearch", "", new { @class = "form-control validate[required]", placeholder = "Login Name" })
            </div>
            <div class="col-md-2"> <button id="search" type="submit" name="search" class="btn-tgs">SEARCH</button></div>
        </div>

            <div class="col-md-12" style="height:10px;"></div>*@

        if (@ViewBag.Status == 1)
        {
            @*<div class="form-group">
                <label class="col-md-2" for="textinput"></label>
                <div class="col-md-4">
                    <input type="checkbox" id="chkemail" name="chkemail" onchange="return chkclick(this.id)" />
                    <span>send email to user</span>
                </div>
            </div>*@

                <div class="form-group">
                    <label class="col-md-2" for="textinput">Login Name</label>
                    <div class="col-md-4">
                        @Html.HiddenFor(model => model.UserID)
                        @Html.EditorFor(model => model.LoginName, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", required = "", maxlength = "50", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.LoginName, "", new { @class = "text-danger" })
                    </div>
                </div>

                    <div class="form-group">
                        <label class="col-md-2" for="textinput">E-Mail</label>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control isEmailGood validate[required,[custom[email]]", required = "", maxlength = "100", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.MobileNo)
                        </div>
                    </div>

                    <div id="confemail" class="form-group" style="display:none;">
                        <label class="col-md-2" for="textinput">Re enter E-Mail</label>
                        <div class="col-md-4">
                            <input type="email" id="txtconforemail" class="form-control isEmailGood validate[required,[custom[email]]" />
                        </div>
                    </div>

                    <div class="col-md-12">
                        <div class="col-md-3"> </div>
                        <div class="col-md-1">
                            <button id="forgotuser" onclick="return compareEmail();" name="forgotuser" formaction="ResetPasswordSubmit" class="btn-tgs">SUBMIT</button>
                        </div>
                    </div>
        }
    }
</div>

<script>

    $("#search").on("click", function () {
        $("#RSPForm").validationEngine(
               'attach', {
                   promptPosition: "bottomLeft",
                   scroll: false,
                   autoHidePrompt: true,
                   autoHideDelay: 3500,
                   fadeDuration: 0.3,
                   focusFirstField: false,
                   MaxErrorsPerField: 1
               });
    });

    function compareEmail() {

        var oldemail = document.getElementById("EmailID").value;
        var newEmail = document.getElementById("txtconforemail").value;
        var clickcheck = document.getElementById("chkemail").checked;
        if (clickcheck) {
            if (oldemail == newEmail) {
                return true;
            }
            else {
                $("#errorMsg").html("Please enter correct E-Mail");
                $('#Error').modal('show');
                return false;
            }
            return false;
        }
        else {
            return true;
        }

        return false;
    }

    function chkclick(id) {
        var clickcheck = document.getElementById(id).checked;
        if (clickcheck) {
            // confemail
            document.getElementById("confemail").style.display = 'block';
        }
        else {
            document.getElementById(id).checked = false;
            document.getElementById("confemail").style.display = 'none';
        }
        return false;
    }
</script>
<style>
    .div-border {
        min-height: 300px;
    }
</style>