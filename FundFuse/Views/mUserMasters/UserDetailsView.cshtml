@model TMP.Models.UserMaster_ListAll_Result
@using CONT = TMP.Infrastructure.Web.StatusManager.OtherDetail.Constant;
@{
    ViewBag.Title = "User Details View";
    Layout = "~/Views/MasterPage/_defaultLayout.cshtml";
}
<div class="col-md-12 padoff div-border-multitab">


    @Html.AntiForgeryToken()
    <fieldset>
        <div class="col-md-12  dashboard-title">AUTHORIZED USER INFORMATION</div>
        <div class="col-md-12" style="height:10px;"></div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="col-md-2" for="textinput">Company Name</label>
            <div class="col-md-9">
                @Html.DropDownListFor(model => model.CustomerID, new SelectList(ViewBag.DDLCustomerID, "CustomerID", "CompanyName", Model.CustomerID), "-- Select --", new { @class = "form-control" })
            </div>
            <div class="col-md-1"></div>
        </div>

        <div class="form-group">
            <label class="col-md-2" for="textinput">Full Name</label>
            <div class="col-md-3">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control validate[required,custom[onlyLetterSp]]", maxlength = "50", autocomplete = "off", placeholder = "First Name" } })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control validate[custom[onlyLetterSp]]", maxlength = "50", autocomplete = "off", placeholder = "Middle Name" } })
            </div>
            <div class="col-md-3">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control validate[required,custom[onlyLetterSp]]", maxlength = "50", autocomplete = "off", placeholder = "Last Name" } })
            </div>
            <div class="col-md-1"></div>
        </div>
        <div class="col-md-12" style="height:10px;"></div>
        <div class="form-group">
            <label class="col-md-2" for="textinput">Official E-Mail</label>
            <div class="col-md-3">
                @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control isEmailGood validate[required,custom[email]] ", type = "email", maxlength = "100", autocomplete = "off" } })
            </div>
            <div class="col-md-1"></div>

            <label class="col-md-2" for="textinput">Mobile Number</label>
            <div class="col-md-3">
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control tel validate[required]", maxlength = "30", autocomplete = "off" } })
            </div>
            <div class="col-md-1"></div>

        </div>
        <div class="col-md-12" style="height:10px;"></div>
        <div class="form-group">
            <label class="col-md-2" for="textinput">Designation</label>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.DesignationID, new SelectList(ViewBag.DDLDesignationID, "DesignationID", "DesignationName", Model.DesignationID), "--Select--", new { @class = "form-control validate[required]" })
            </div>
            <div class="col-md-1"></div>

            <label class="col-md-2" for="textinput">Length of Service (Year)</label>
            <div class="col-md-3">
                @Html.EditorFor(model => model.ServLength, new { htmlAttributes = new { @class = "form-control validate[required] validate[custom[integer]]", maxlength = "3", autocomplete = "off" } })
            </div>
            <div class="col-md-1"></div>
        </div>


        <div class="col-md-12" style="height:10px;"></div>
        <div class="col-md-12  dashboard-title">PERSONAL IDENTIFICATION DETAILS</div>
        <div class="col-md-12" style="height:10px;"></div>
        <div class="form-group">
            <label class="col-md-2" for="textinput">ID Type</label>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.DocumentID, new SelectList(ViewBag.DDLDocumentID, "DocumentID", "DocumentName", Model.DocumentID), "--Select--", new { @class = "form-control validate[required]" })
            </div>
            <div class="col-md-1"></div>
            <label class="col-md-2" for="textinput">ID Number</label>
            <div class="col-md-3">
                @Html.EditorFor(model => model.DocNo, new { htmlAttributes = new { @class = "form-control validate[required]", maxlength = "50", autocomplete = "off" } })
            </div>
            <div class="col-md-1"></div>
        </div>

        <div class="form-group">
            <label class="col-md-2" for="textinput">ID Copy</label>
            <div class="col-md-3">
                @if (Model.Attach != null)
                {                    
                    if (Model.Attach != "")
                    {
                        @Html.HiddenFor(x => x.Attach)
                        <p class="p-view">
                            <a href='~/Files/Upload/@Model.Attach' target="_blank">View</a>
                        </p>
                    }
                }
            </div>
            <div class="col-md-1"></div>
            <label class="col-md-2" for="textinput"></label>
            <div class="col-md-3">
            </div>
            <div class="col-md-1"></div>
        </div>

        <div class="col-md-12" style="height:25px;"></div>
        <div class="col-md-12  dashboard-title">USER ACCESS DETAILS</div>
        <div class="col-md-12" style="height:10px;"></div>
        <div class="form-group">
            <label class="col-md-2" for="textinput">Role</label>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.RoleIDs, new SelectList(ViewBag.DDLRoleID, "RoleID", "RoleName", Model.RoleIDs), new { @multiple = "multiple", @class = "form-control validate[required]", @id = "RoleIDs" })
                @Html.HiddenFor(model => model.GetRoleIDs)
            </div>
            <div class="col-md-7"></div>
        </div>


       @using (Html.BeginForm("UserDetailsView", "mUserMasters", FormMethod.Post, new {@class = "col-md-12 padoff CommonValidations", id = "UMForm" }))
       {
            <div class="col-md-12">
                <div class="col-md-7">
                    @if (ViewBag.IsCheckerOrApprover != "Viewer")
                    {
                        <textarea class="col-md-12 footerbox validate[required]" placeholder="Remarks" id="ProcessRemark" name="ProcessRemark" cols="1" rows="1"></textarea>
                    }
                    <input type="hidden" id="UserID" name="UserID" value="@Model.UserID" />
                    <input type="hidden" id="Status" name="Status" value="@Model.Status" />
                </div>
                <div class="col-md-5" style="text-align:right;">

                    @if (Model.Status == CONT.NR || Model.Status == CONT.UR)
                    {
                        if (ViewBag.IsCheckerOrApprover == "Checker")
                        {
                            <button id="btnCheckerReturn" name="btnCheckerReturn" value="btnCheckerReturn" class="btn-tgs" formnovalidate>Return to Maker</button>
                                <button id="btnCheckerSubmit" name="btnCheckerSubmit" value="btnCheckerSubmit" class="btn-tgs CommonDetachValidation" formnovalidate>Submit</button>
                        }
                    }
                    else if (Model.Status == CONT.NC || Model.Status == CONT.UC)
                    {
                        if (ViewBag.IsCheckerOrApprover == "Approver")
                        {
                            <button id="btnApproverReject" name="btnApproverReject" value="btnApproverReject" class="btn-tgs" formnovalidate>Reject</button>
                                <button id="btnApprove" name="btnApprove" value="btnApprove" class="btn-tgs CommonDetachValidation" formnovalidate>Approve</button>
                        }
                    }
                </div>
            </div>
       }
    </fieldset>

</div>
<style>
    
    .div-incomplate {
        display: none;
    }

    .div-complate {
        display: none;
    }

    .dropdown-menu {
        border-radius: 0px;
        margin: 0px;
    }

        .dropdown-menu > li > a:hover {
            background-color: #428bca;
            color: #000000;
        }

    .multiselect-container > li > a.multiselect-all label {
        font-weight: 400;
        padding: 0px 0px 0px 35px;
    }

    .dropdown-menu > li > a {
        background-color: transparent;
        padding-left: 0px;
        padding-top: 5px;
        padding-bottom: 5px;
    }

    .radio, .checkbox {
        display: block;
        min-height: 10px;
    }

    .btn-group > .btn:first-child {
        margin-left: 0;
        text-align: left;
    }
</style>
<script>
    $('.form-control').attr('readonly', 'true');
    $('.form-control').attr('disabled', 'true');
    var selected_tags_arr = new Array();
    var selected_tags = $('#GetRoleIDs').val();
    if (selected_tags != "") {
        if (typeof (selected_tags) != 'undefined') {
            selected_tags_arr = selected_tags.split(",");
            $('#RoleIDs option').each(function () {
                var option_val = this.value;
                for (var i in selected_tags_arr) {
                    if (selected_tags_arr[i] == option_val) {
                        $("#RoleIDs option[value='" + this.value + "']").attr("selected", 1);
                    }
                }
            });
        }
    }
    $('#RoleIDs').multiselect({
        includeSelectAllOption: true,
        maxHeight: '300',
        buttonWidth: '254.5',

    });
</script>

