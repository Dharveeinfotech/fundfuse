@model TMP.Models.UserMaster_ListAll_Result
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/MasterPage/_defaultLayout.cshtml";
}
<div class="col-md-12 div-border padoff">
    @using (Html.BeginForm("Create", "mUserMasters", FormMethod.Post, new { enctype = "multipart/form-data", @class = "col-md-12 padoff CommonValidations", id = "UMForm" }))
        
        {
        @Html.AntiForgeryToken()
        <fieldset>
            <div class="col-md-12  dashboard-title ">Authorized User Information </div>
            <div class="col-md-12" style="height:10px;"></div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <label class="col-md-2" for="textinput">Full Name&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control validate[required,custom[onlyLetterSp]]", maxlength = "50", autocomplete = "off", placeholder = "First Name" } })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control validate[custom[onlyLetterSp]]", maxlength = "50", autocomplete = "off", placeholder = "Middle Name" } })
                </div>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control validate[required,custom[onlyLetterSp]]", maxlength = "50", autocomplete = "off", placeholder = "Last Name" } })
                </div>
                <div class="col-md-1"></div>
            </div>
            <div class="col-md-12" style="height:10px;"></div>
            <div class="form-group">
                <label class="col-md-2" for="textinput">Official E-Mail&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control isEmailGood validate[required,custom[email]] ", type = "email", maxlength = "100", autocomplete = "off" } })
                </div>
                <div class="col-md-1"></div>
              
                    <label class="col-md-2" for="textinput">Mobile Number&nbsp;<span style="color:red;width:50px;">*</span></label>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control tel validate[required]", maxlength = "30", autocomplete = "off" } })
                    </div>
                    <div class="col-md-1"></div>
               
            </div>
            <div class="col-md-12" style="height:10px;"></div>
            <div class="form-group">
                <label class="col-md-2" for="textinput">Designation&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.DropDownList("DesignationID", null, "--  Select  --", new { @class = "form-control validate[required]" })
                </div>
                <div class="col-md-1"></div>
               
                    <label class="col-md-2" for="textinput">Length of Service (Year)&nbsp;<span style="color:red;width:50px;">*</span></label>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.ServLength, new { htmlAttributes = new { @class = "form-control validate[required] validate[custom[integer]]", maxlength = "3", autocomplete = "off" } })
                    </div>
                    <div class="col-md-1"></div>               
            </div>


            <div class="col-md-12" style="height:10px;"></div>
            <div class="col-md-12  dashboard-title">Personal Identification Details</div>
            <div class="col-md-12" style="height:10px;"></div>
            <div class="form-group">
                <label class="col-md-2" for="textinput">ID Type&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.DropDownList("DocumentID", null, "-- Select --", new { @class = "form-control validate[required]" })
                </div>
                <div class="col-md-1"></div>
                <label class="col-md-2" for="textinput">ID Number&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.DocNo, new { htmlAttributes = new { @class = "form-control validate[required]", maxlength = "50", autocomplete = "off" } })
                </div>
                <div class="col-md-1"></div>
            </div>

            <div class="form-group">
                <label class="col-md-2" for="textinput">ID Copy&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @if (Model.Attach != null)
                    {
                        <label class="f-btn f-btn-default f-btn-file">
                            Upload <input type="file" name="Attach" id="Attach" class="file" />
                        </label>
                            <label class="l-filename" id="Attach_span"></label>
                        if (Model.Attach != "")
                        {
                            @Html.HiddenFor(x => x.Attach)
                            <p class="p-view">
                                <a href='~/Files/Upload/@Model.Attach' target="_blank">View</a>
                            </p>
                        }
                    }
                    else
                    {
                        <label class="f-btn f-btn-default f-btn-file">
                            Upload <input type="file" name="Attach" id="Attach" class="validate[required] file" />
                        </label>
                            <label class="l-filename" id="Attach_span"></label>
                    }


                </div>
                <div class="col-md-1"></div>
                <label class="col-md-2" for="textinput"></label>
                <div class="col-md-3">
                </div>
                <div class="col-md-1"></div>
            </div>


            <div class="col-md-12" style="height:10px;"></div>
            <div class="col-md-5"></div>
            <div class="col-md-12" style="height:10px;"></div>
            <div class="col-md-12  dashboard-title">User Access Details</div>
            <div class="col-md-12" style="height:10px;"></div>
            <div class="form-group">
                <label class="col-md-2" for="textinput">Company Name&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">                    
                    @Html.DropDownListFor(model => model.CustomerID, new SelectList(ViewBag.DDLCustomerID, "CustomerID", "CompanyName", Model.CustomerID), "-- Select --", new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-12" style="height:10px;"></div>
            <div class="form-group">
                <label class="col-md-2" for="textinput">Role&nbsp;<span style="color:red;width:50px;">*</span></label>
                <div class="col-md-3">
                    @Html.DropDownList("ddlRole", ViewBag.Roles as SelectList, "-- Select --", new { @class = "form-control" })
                    @Html.ValidationMessage("ddlRole", "", new { @class = "text-danger", id = "validdlRole" })
                    <div id="DivAddLink"></div>
                    @Html.Hidden("hidSelRole")
                </div>
                <div class="col-md-2">
                    <div id="divaddremove" style="width:160px"> <div id="AddnewDiv"></div> </div>
                </div>
            </div>
            <div class="col-md-12">
                <button id="createsave" style="float:right;" name="createsave" onclick="return checkRole() && checkDepartment();" class="btn-tgs">Save</button>
            </div>
        </fieldset>
        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog " style="width:1100px">
                <div class="modal-content">
                    <div class="modal-header">
                        <button id="DivClose" type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body scroll" style="height:500px;">
                        <div id='myModalContent'></div>
                    </div>
                </div>
            </div>
        </div>      
    }
</div>

<style type="text/css">
    .web_dialog_overlay {
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        height: 100%;
        width: 100%;
        margin: 0;
        padding: 0;
        background: #000000;
        opacity: .15;
        filter: alpha(opacity=15);
        -moz-opacity: .15;
        z-index: 101;
        display: none;
    }

    .web_dialog {
        display: none;
        position: fixed;
        /*overflow-y: scroll;
        overflow-x: scroll;*/
        top: 40%;
        left: 41%;
        margin-left: -190px;
        margin-top: -100px;
        background-color: #ffffff;
        /*border: 2px solid #336699;*/
        padding: 0px;
        z-index: 102;
    }

    .WP {
        height: 400px;
        width: 700px;
    }

    .web_dialog_title {
        border-bottom: solid 2px #336699;
        background-color: #336699;
        padding: 4px;
        color: White;
        font-weight: bold;
    }

        .web_dialog_title a {
            color: White;
            text-decoration: none;
        }

    .align_right {
        text-align: right;
    }

    #loading {
        width: 100%;
        height: 100%;
        top: 0px;
        left: 0px;
        position: fixed;
        display: block;
        opacity: 0.7;
        background-color: #fff;
        z-index: 99;
        text-align: center;
    }

    #loading-image {
        position: absolute;
        top: 10%;
        left: 50%;
        z-index: 100;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        $("#UMForm").validationEngine(
            'attach', {
                promptPosition: "bottomLeft",
                scroll: false,
                autoHidePrompt: true,
                autoHideDelay: 3500,
                fadeDuration: 0.3,
                focusFirstField: false,
                MaxErrorsPerField: 1
            });

        $("#ddlRole").change(function (e) {

            var value = $("#ddlRole").val();
            if (value != "") {


                var removenewButton = document.getElementById("AddnewDiv");
                removenewButton.parentNode.removeChild(removenewButton); //remove element

                var createAddnewDiv = document.getElementById("divaddremove");
                var addElementDiv = document.createElement("div"); //Add element
                addElementDiv.setAttribute("id", "AddnewDiv");
                addElementDiv.setAttribute("style", "width:160px;");
                createAddnewDiv.appendChild(addElementDiv);

                var AddnewButton = document.getElementById("AddnewDiv");
                var dynamicId = "btn_" + $("#ddlRole").val();
                var addElement = document.createElement("input"); //Add element
                addElement.setAttribute("type", "button");
                addElement.setAttribute("id", dynamicId);
                addElement.setAttribute("name", dynamicId);
                addElement.setAttribute("value", "View Detail");
                addElement.setAttribute("onclick", "ViewDetail(this.id)");
                AddnewButton.appendChild(addElement);

                var dynamicId = "btn_add_" + $("#ddlRole").val();
                var addElement = document.createElement("input"); //Add element
                addElement.setAttribute("type", "button");
                addElement.setAttribute("id", dynamicId);
                addElement.setAttribute("name", dynamicId);
                addElement.setAttribute("value", "Add Role");
                addElement.setAttribute("onclick", "AddRole(this.id)");
                AddnewButton.appendChild(addElement);

            }
            else {
                var removenewButton = document.getElementById("AddnewDiv");
                removenewButton.parentNode.removeChild(removenewButton); //remove element

                var createAddnewDiv = document.getElementById("divaddremove");
                var addElementDiv = document.createElement("div"); //Add element
                addElementDiv.setAttribute("id", "AddnewDiv");
                addElementDiv.setAttribute("style", "width:160px;");
                createAddnewDiv.appendChild(addElementDiv);

            }

            // $("#output").html("<b>Your favorite mobile brand: </b>" + brand);

            //ShowDialog(true);
            //e.preventDefault();
        });
           

        $("#btnShowModal").click(function (e) {
            ShowDialog(true);
            e.preventDefault();
        });

        $("#btnClose").click(function (e) {
            HideDialog();
            e.preventDefault();
        });

        $("#btnSubmit").click(function (e) {
            var brand = $("#brands input:radio:checked").val();
            $("#output").html("<b>Your favorite mobile brand: </b>" + brand);
            HideDialog();
            e.preventDefault();
        });
    });

    function checkRole() {
        var Role = document.getElementById("hidSelRole").value;
        if (Role == '') {
            document.getElementById("validdlRole").innerHTML = "Please Select Role";
            return false;
        }
        return true;
    }  
       

    function ViewDetail(id) {

        //add image
        $('#loading').show();
        var str = id.split('_');
        var roleid = str[1];// document.getElementById(id).value;
        $.ajax({
            url: "/mRoleMasters/RoleView",
            //url: "/mUserMasters/GetRole",
            type: "POST",
            data: "{RoleId:'" + roleid + "'}",
            datatype: "json",
            contentType: "application/json; charset=utf-8",
            //contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            success: function (result) {
                if (result == 'Roles not exist.') {
                    $("#errorMsg").html(result);
                    $('#Error').modal('show');
                }
                else {                    
                    $('#myModalContent').html(result);
                    $('#myModal').modal('show');
                    //$("#NEW1").html(result);
                    $('#loading').hide();
                    ShowDialog(true);
                }
                $('#loading').hide();
                return false;
            },
            error: function () {
                $('#loading').hide();
                $("#errorMsg").html("error");
                $('#Error').modal('show');
            }
        });
    }

    function AddRole(id) {

        $('#loading').show();
        var str = id.split('_');

        var roleid = str[2];
        var selval = document.getElementById("hidSelRole").value;
        if (selval != '') {
            var checkroleId = '';
            var lastchar = selval.slice(-1);
            if (lastchar == ',')
                selval = selval.slice(0, -1);
            var removeRole = selval;
            var spiltRole = removeRole.split(',');
            var spilitString = '';
            for (var i = 0; i < spiltRole.length; i++) {
                if (spiltRole[i] == roleid) {
                    $('#loading').hide();
                    document.getElementById("validdlRole").innerHTML = "Role Name already exist.";
                    return false;
                }
            }
        }
        $.ajax({
            url: "/mUserMasters/GetRoleName",
            type: "POST",
            data: "{roleid:'" + roleid + "'}",
            datatype: "json",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                if (result == 'Roles not exist.') {
                    $('#loading').hide();
                    $("#errorMsg").html(result);
                    $('#Error').modal('show');
                }
                else {
                    var str = result.split('!#!');
                    var AddnewButton = document.getElementById("DivAddLink");
                    var dynamicId = "lnk_" + str[0];
                    var addElement = document.createElement("a"); //Add element
                    addElement.setAttribute("id", dynamicId);
                    addElement.setAttribute("name", dynamicId);
                    addElement.setAttribute("style", "margin-right:5px;float:left;");
                    addElement.setAttribute("onclick", "ViewDetail(this.id)");
                    //addElement.setAttribute("onmouseover", "ViewDetail(this.id)");
                    addElement.innerHTML = str[1];
                    AddnewButton.appendChild(addElement);

                    var dynamicId = "lnkDel_" + str[0];
                    var addElement = document.createElement("a"); //Add element
                    addElement.setAttribute("id", dynamicId);
                    addElement.setAttribute("name", dynamicId);
                    addElement.setAttribute("style", "width:10%;float:right;");
                    addElement.setAttribute("onclick", "DeleteRole(this.id)");
                    //addElement.innerHTML = "<i class='fa fa-times 1x'></i>";
                    addElement.innerHTML = "<i style='color:red;' class='glyphicon glyphicon-remove'></i>";

                    AddnewButton.appendChild(addElement);

                    var dyanmicDiv = document.createElement('div');
                    dyanmicDiv.setAttribute("style", "width:100%;float:left;");
                    AddnewButton.appendChild(dyanmicDiv);

                    if (document.getElementById('hidSelRole').value == "") {
                        document.getElementById('hidSelRole').value = str[0] + ',';
                    }
                    else {
                        var getSelRole = document.getElementById('hidSelRole').value;
                        getSelRole = getSelRole + str[0] + ',';
                        $('#hidSelRole').val(getSelRole);
                    }
                    var removenewButton = document.getElementById("AddnewDiv");
                    removenewButton.parentNode.removeChild(removenewButton);

                    var createAddnewDiv = document.getElementById("divaddremove");
                    var addElementDiv = document.createElement("div"); //Add element
                    addElementDiv.setAttribute("id", "AddnewDiv");
                    addElementDiv.setAttribute("style", "width:160px;");
                    createAddnewDiv.appendChild(addElementDiv);
                    $('#loading').hide();

                    document.getElementById("validdlRole").innerHTML = "";
                    document.getElementById("ddlRole").value = '';
                }
                $('#loading').hide();
                return false;
            },
            error: function () {
                $('#loading').hide();
                $("#errorMsg").html("error");
                $('#Error').modal('show');
            }
        });
    }

   
    function DeleteRole(id) {

        $('#loading').show();

        var str = id.split('_');
        var roleid = str[1];
        var delRole = document.getElementById("hidSelRole").value;
        var lastchar = delRole.slice(-1);
        if (lastchar == ',')
            delRole = delRole.slice(0, -1);

        var removeRole = delRole;
        var spiltRole = removeRole.split(',');
        var spilitString = '';
        for (var i = 0; i < spiltRole.length; i++) {
            if (spiltRole[i] != str[1]) {
                spilitString += spiltRole[i] + ",";
            }
        }
        document.getElementById("hidSelRole").value = "";
        document.getElementById("hidSelRole").value = spilitString;
        var delediv = "lnkDel_" + str[1];
        var deltag = "lnk_" + str[1];
        var removenewButton = document.getElementById(delediv);
        removenewButton.parentNode.removeChild(removenewButton);

        var removenewTag = document.getElementById(deltag);
        removenewTag.parentNode.removeChild(removenewTag);
        $('#loading').hide();
        return false;
    }

   
    function ShowDialog(modal) {
        $("#overlay").show();
        $("#dialog").fadeIn(300);

        if (modal) {
            $("#overlay").unbind("click");
        }
        else {
            $("#overlay").click(function (e) {
                HideDialog();
            });
        }
    }

    function HideDialog() {
        $("#overlay").hide();
        $("#dialog").fadeOut(300);
    }

    function CheckValidName(Id) {

        var UserLogin = document.getElementById(Id).value;
        $.ajax({
            url: "/mUserMasters/CheckUserName",
            type: "POST",
            data: "{UserLogin:'" + UserLogin + "'}",
            datatype: "json",
            contentType: "application/json; charset=utf-8",
            //contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            success: function (result) {
                document.getElementById('VLoginName').innerText = result;
                $('#VLoginName').text(result);
                $('#VLoginName').css('color', 'Green');
                return false;
            },
            error: function () {
                $("#errorMsg").html("error");
                $('#Error').modal('show');
            }
        });
    }
</script>
